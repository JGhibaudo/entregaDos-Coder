// Button base styles
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-xs;
  padding: $spacing-sm $spacing-md;
  border: none;
  border-radius: $border-radius-sm;
  font-family: $font-primary;
  font-size: $font-size-base;
  font-weight: 600;
  text-decoration: none;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  
  // Disabled state
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
  }
  
  // Hover and focus states
  &:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  }
  
  &:focus {
    outline: 2px solid $secondary-color;
    outline-offset: 2px;
  }
  
  // Active state
  &:active:not(:disabled) {
    transform: translateY(0);
  }
  
  // Loading state
  &.loading {
    color: transparent;
    
    &::after {
      content: '';
      position: absolute;
      width: 16px;
      height: 16px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  }
}

// Button variants using @mixin
@mixin button-variant($background, $color, $hover-background: darken($background, 10%)) {
  background-color: $background;
  color: $color;
  
  &:hover:not(:disabled) {
    background-color: $hover-background;
  }
  
  &:focus {
    outline-color: $background;
  }
}

// Button sizes
.btn {
  &-sm {
    padding: $spacing-xs $spacing-sm;
    font-size: map-get($font-sizes, 'sm');
  }
  
  &-lg {
    padding: $spacing-md $spacing-lg;
    font-size: map-get($font-sizes, 'lg');
  }
  
  &-xl {
    padding: $spacing-lg $spacing-xl;
    font-size: map-get($font-sizes, 'xl');
    font-weight: 700;
  }
  
  &-block {
    width: 100%;
    justify-content: center;
  }
}

// Button color variants
.btn-primary {
  @include button-variant($primary-color, $white);
}

.btn-secondary {
  @include button-variant($secondary-color, $white);
}

.btn-accent {
  @include button-variant($accent-color, $white);
}

.btn-outline {
  &-primary {
    background: transparent;
    color: $primary-color;
    border: 2px solid $primary-color;
    
    &:hover:not(:disabled) {
      background: $primary-color;
      color: $white;
    }
  }
  
  &-secondary {
    background: transparent;
    color: $secondary-color;
    border: 2px solid $secondary-color;
    
    &:hover:not(:disabled) {
      background: $secondary-color;
      color: $white;
    }
  }
}

.btn-ghost {
  background: transparent;
  color: $primary-color;
  
  &:hover:not(:disabled) {
    background: rgba($primary-color, 0.1);
  }
}

// Icon buttons
.btn-icon {
  width: 40px;
  height: 40px;
  padding: 0;
  border-radius: 50%;
  @include flex-center;
  
  &.btn-sm {
    width: 32px;
    height: 32px;
  }
  
  &.btn-lg {
    width: 48px;
    height: 48px;
  }
}

// Button group
.btn-group {
  display: inline-flex;
  gap: 1px;
  border-radius: $border-radius-sm;
  overflow: hidden;
  
  .btn {
    border-radius: 0;
    margin: 0;
    
    &:first-child {
      border-top-left-radius: $border-radius-sm;
      border-bottom-left-radius: $border-radius-sm;
    }
    
    &:last-child {
      border-top-right-radius: $border-radius-sm;
      border-bottom-right-radius: $border-radius-sm;
    }
  }
}

// Generate utility classes for buttons
@each $color-name, $color-value in ('primary': $primary-color, 'secondary': $secondary-color, 'accent': $accent-color) {
  .btn-#{$color-name} {
    @include button-variant($color-value, $white);
  }
}